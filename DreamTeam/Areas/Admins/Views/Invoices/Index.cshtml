@model IEnumerable<DreamTeam.Models.Store.Invoice>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admins/Views/Shared/_Layout.cshtml";
}

<div class="card card-primary m-2">
    <div class="card-header">
        <h3 class="card-title">Danh Sách Đơn Hàng</h3>
    </div>

    <div class="card card-primary m-2">
        <div class="card-body">
            <div class="form-group my-2">
                <label for="InvoiceStatusId">Lọc Theo Trạng Thái Đơn Hàng</label>
                @Html.DropDownList("InvoiceStatusId", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="form-group my-2" id="tb_list">
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script>
        $(document).ready(() => {
            let route_invoice = "/api/Admin_Invoices/"
            let route_invoicestatus = "/api/Admin_InvoiceStatuses/"
            let list_invoicestatus = getInvoiceStatus()

            loadInvoices()

            function getInvoiceStatus() {
                return JSON.parse(
                    $.ajax({
                        url: route_invoicestatus,
                        method: "GET",
                        async: false
                    }).responseText
                )
            }


            function loadInvoices() {
                $.ajax({
                    url: route_invoice + $("#InvoiceStatusId").val(),
                    method: "GET",
                    async: false
                }).done(data => {
                    $("#tb_list table").remove()
                    $("#tb_list").append(
                        createTable(data,
                            ["Họ Tên", "Thanh Toán", "Ngày Lập", "Trạng Thái"],
                            [
                                ["Customer", 1],
                                ["IsPayed", 2],
                                ["CreateAt", 1],
                                ["InvoiceStatus", 4, list_invoicestatus],
                            ], false, true, false)
                    )
                })
            }

            $(document).on("click", ".IsPayed ", (e) => {
                e.preventDefault();
                let tar = $(e.currentTarget);
                putOne(tar.attr("value"), { IsPayed: !(tar.text() == "true") }, route_invoice).done(() => {
                    sendMessage("Đã lưu thay đổi!", "done")
                    changeBackgroundBoolOne(tar)
                }).fail(() => {
                    sendMessage("Vui lòng thử lại sau!", "fail")
                })
            })

            $(document).on("change", ".InvoiceStatus ", (e) => {
                e.preventDefault();
                let tar = $(e.currentTarget);
                putOne(tar.attr("value"), {
                    InvoiceStatusId: $(e.currentTarget).val()
                }, route_invoice).done(() => {
                    sendMessage("Đã lưu thay đổi!", "done")
                    loadInvoices()
                }).fail(() => {
                    sendMessage("Vui lòng thử lại sau!", "fail")
                })
            });

            $(document).on("change", "#InvoiceStatusId ", (e) => {
                e.preventDefault();
                loadInvoices()
            });

            $(document).on("click", ".btn_detail", (e) => {
                window.location = window.location.href + "/Details/" + $(e.currentTarget).attr("value")
            })
        })
    </script>    
}